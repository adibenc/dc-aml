# @adibenc

services:
# wip nginx
  nx-main:
    container_name: nx-main
    build: ./nx
    restart: always
    ports:
      # - 443:443
      - ${NX_PORT}:80
    volumes:
      - ${NX_ROOT_WEB}:/var/www/html
      - $PWD/etc/nginx/conf.d/web.conf:/etc/nginx/conf.d/default.conf
      - $PWD/etc/nginx/conf.d/_base-php8.conf:/etc/nginx/conf.d/_base-php8.conf
      - $PWD/etc/nginx/conf.d/gf/gf.conf:/etc/nginx/conf.d/gf/gf.conf
      # - $PWD/etc/nginx/conf.d/ssl/:/etc/ssl/
      - "$PWD/etc/modsecurity:/etc/modsecurity"
      - "$PWD/etc/modsecurity.d/include.conf:/etc/modsecurity.d/include.conf"
      - "$PWD/etc/modsecurity.d/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf"
      - "$PWD/etc/nginx/conf.d/default.template:/etc/nginx/conf.d/default.template"
      - "./var/log/nginx:/var/log/nginx"
      - "./phpsocket:/var/run"
      - ${APP_DCK_SHARED_DIR}:/var/shared/
    depends_on:
      - php8
    extra_hosts:
      - "l1:172.17.0.1"
      - "host.docker.internal:host-gateway"

  php8:
    build: ./php8
    container_name: php8
    restart: always
    ports:
      - 8000
    volumes:
      - ${NX_ROOT_WEB}:/var/www/html/
      # still contain errors
      - $PWD/php8/php.ini:/usr/local/etc/php/php.ini
      - $PWD/php8/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
      - $PWD/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - "./phpsocket:/var/run"
      - ${APP_DCK_SHARED_DIR}:/var/shared/
    extra_hosts:
      - "l1:172.17.0.1"
      - "h14:10.110.212.14"
      - "host.docker.internal:host-gateway"
  
  # wip use tensorflow image
  # tensorflow + masonite
  pyx-tfm:
    # image: tensorflow/tensorflow:latest-jupyter
    # build: .
    build: ./src/ms-aml
    container_name: pyx-tfm
    restart: always
    ports:
      - ${DOCKER_APP_MS3_PORT}:8000
      - "8888:8888"
    volumes:
      # add for passwd
      # tf default mounts
      - ./pyx/.jupyter/:/root/.jupyter/
      # - jupyter_server_config.json:/root/.jupyter/jupyter_server_config.json
      - ${VOL_TF_DIST}:/usr/local/lib/python3.11/dist-packages/
      - ${VOL_TF_USER}:/tf/user/
      # masonite mounts
      - ./tmp:/tmp/local
      - ${VOL_MAIN_PY_DIR}:/app
      - ${APP_DCK_SHARED_DIR}:/var/shared/
    command: bash -c "/app/setup.sh" # wip
    healthcheck:
      test: ["CMD", "echo"]
      interval: 5m30s
      timeout: 10s
      retries: 3
      start_period: 2m
    environment:
      - TZ=UTC
      # - JUPYTER_PASSWORD_HASH: ${JUPYTER_PASSWORD_HASH}
      - ZENML_CONNECT_URL=${ZENML_CONNECT_URL}
      - APP_INIT_TYPE=${APP_INIT_TYPE}
    extra_hosts:
      - "l1:172.17.0.1"
      - "host.docker.internal:host-gateway"
    stdin_open: true
    tty: true
  
  # cyper service
  neo4j:
    image: neo4j:4.4.37-community
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      # - $HOME/neo4j/data:/data
      - ./var/neo4j/data:/data
      - ${APP_DCK_SHARED_DIR}:/var/shared/
    
  zenml:
    image: zenmldocker/zenml-server
    container_name: zenml
    ports:
      - "8080:8080"
    environment:
      - ZENML_STORE_URL=${ZENML_STORE_URL}
    # links:
    #   - mysql
    # depends_on:
    #   - mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # restart: on-failure
    restart: always
    volumes:
      - ${APP_DCK_SHARED_DIR}:/var/shared/
  
  # 2024 q4 use redis from host
  # redis:
  #   build: ./redis/
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./redis-data:/data
  #   restart: always

volumes:
  phpsocket: